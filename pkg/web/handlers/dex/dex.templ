package dex

import (
	"fmt"

	"github.com/m50/shinidex/pkg/types"
	"github.com/m50/shinidex/pkg/math"
)

templ List(dexes []types.Pokedex) {
	<div class="flex justify-center w-full">
		<div class="flex flex-col gap-6 w-2/3">
			<h2 class="text-6xl flex justify-center">Living Dexes</h2>
			<div class="flex justify-center">
				<button hx-get="/dex/new" hx-target="#app" hx-push-url="true" class="bg-indigo-500 rounded-xl py-2 px-4 flex-none text-xl mt-4">
					Add Living Dex
				</button>
			</div>
			<div class="grid gap-2 grid-cols-2 w-full">
				for _, dex := range dexes {
					if cfg, err := dex.GetConfig(); err == nil {
						<div
							hx-get={ string(templ.URL(fmt.Sprintf("/dex/%s", dex.ID))) }
							hx-push-url="true"
							hx-target="#app"
							class="flex flex-col items-center gap-2 rounded-xl
								bg-slate-700 border border-slate-600 p-2
								cursor-pointer hover:bg-indigo-700"
						>
							<div class="text-3xl text-center">
								if cfg.Shiny {
									<span>✨</span>
								}
								<br/>
								<span>{ dex.Name }</span>
								<br/>
								if cfg.Shiny {
									<span>✨</span>
								}
							</div>
							<div class="flex flex-col items-center">
								<span class="font-bold">Standard Forms</span>
								<span>{ cfg.Forms.String() }</span>
							</div>
							<div class="flex flex-col items-center">
								<span class="font-bold">Gender Forms</span>
								<span>{ cfg.GenderForms.String() }</span>
							</div>
							<div class="flex flex-col items-center">
								<span class="font-bold">Regional Forms</span>
								<span>{ cfg.RegionalForms.String() }</span>
							</div>
							<div class="flex flex-col items-center">
								<span class="font-bold">Gigantamax Forms</span>
								<span>{ cfg.GMaxForms.String() }</span>
							</div>
							<button hx-get={ fmt.Sprintf("/dex/%s/edit", dex.ID) } hx-target="#app" onclick="event.stopPropagation();"
								hx-push-url="true" class="bg-indigo-500 rounded-xl py-2 px-4 text-xl">
								Edit
							</button>
							<button hx-confirm={ fmt.Sprintf("Are you sure you wish to delete %s?", dex.Name) } 
								hx-delete={ fmt.Sprintf("/dex/%s", dex.ID) } hx-target="#app" onclick="event.stopPropagation();"
								hx-push-url="true" class="bg-indigo-500 rounded-xl py-2 px-4 text-xl">
								Delete
							</button>
						</div>
					}
				}
			</div>
		</div>
	</div>
}

templ Display(pokemonLists []types.PokemonList, dex types.Pokedex) {
	<div class="flex flex-col px-4 lg:px-0 w-full">
		<div class="grid gap-4 grid-cols-1 md:grid-cols-3 lg:grid-cols-4 3xl:grid-cols-5 p-4">
		{{ j := 0 }}
		for _, pokemon := range pokemonLists {
			for i := 0; i < math.Ceil(float64(len(pokemon)) / 30); i++ {
				@Box(dex, j+1, pokemon.Box(i))
				{{ j++ }}
			}
		}
		</div>
	</div>
}
