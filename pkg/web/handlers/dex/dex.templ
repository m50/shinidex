package dex

import (
	"fmt"

	"github.com/m50/shinidex/pkg/types"
	"github.com/m50/shinidex/pkg/math"
	"github.com/m50/shinidex/pkg/views/icons"
)

templ List(dexes []types.Pokedex) {
	<div class="flex justify-center w-full pb-10">
		<div class="flex flex-col gap-6 w-full px-8 lg:px-0 lg:w-2/3">
			<h2 class="text-6xl flex justify-center">Living Dexes</h2>
			<div class="flex justify-center">
				<button hx-get="/dex/new" hx-target="#app" hx-push-url="true" class="bg-indigo-500 rounded-xl py-2 px-4 flex-none text-xl mt-4 cursor-pointer hover:bg-indigo-600">
					Add Living Dex
				</button>
			</div>
			<div class="gap-2 flex flex-col">
				for _, dex := range dexes {
					@listRow(dex)
				}
			</div>
		</div>
	</div>
}

templ Display(pokemonLists []types.PokemonList, dex types.Pokedex) {
	<div class="flex flex-col px-4 lg:px-0 w-full">
		<div class="grid gap-4 grid-cols-1 md:grid-cols-3 lg:grid-cols-4 3xl:grid-cols-5 p-4">
		{{ j := 0 }}
		for _, pokemon := range pokemonLists {
			for i := 0; i < math.Ceil(float64(len(pokemon)) / 30); i++ {
				@Box(dex, j+1, pokemon.Box(i))
				{{ j++ }}
			}
		}
		</div>
	</div>
}

templ listRow(dex types.Pokedex) {
	<div hx-get={ string(templ.URL(fmt.Sprintf("/dex/%s", dex.ID))) } 
		hx-push-url="true" hx-target="#app"
		class="grid grid-cols-2 md:grid-cols-4 items-center gap-4 w-full rounded-xl
			bg-slate-700 border border-slate-600 p-4
			cursor-pointer hover:bg-indigo-700"
	>
		<div class="text-2xl items-center col-span-full justify-between flex">
			<div>
				{{ icon := "" }}
				if dex.Config.Shiny {
					{{ icon = "âœ¨" }}
				}
				<span>{ fmt.Sprintf("%[2]s %[1]s %[2]s", dex.Name, icon) }</span>
				if dex.Config.Shiny {
					<span></span>
				}
			</div>
			<div class="flex items-center justify-end gap-6 px-4">
				<button hx-get={ fmt.Sprintf("/dex/%s/edit", dex.ID) } hx-target="#app" onclick="event.stopPropagation();"
					hx-push-url="true" class="fill-white hover:fill-indigo-300 focus:fill-indigo-100 rounded-xl text-xl w-6 h-6">
					@icons.PenToSquare()
				</button>
				<button hx-confirm={ fmt.Sprintf("Are you sure you wish to delete %s?", dex.Name) } hx-delete={
					fmt.Sprintf("/dex/%s", dex.ID) } hx-target="#app" onclick="event.stopPropagation();" hx-push-url="true"
					class="fill-white hover:fill-indigo-300 focus:fill-indigo-100 rounded-xl text-xl w-6 h-6">
					@icons.Trash()
				</button>
			</div>
		</div>
		<div class="flex flex-col items-center">
			<span class="font-bold text-center">Standard Forms</span>
			<span>{ dex.Config.Forms.String() }</span>
		</div>
		<div class="flex flex-col items-center">
			<span class="font-bold text-center">Gender Forms</span>
			<span>{ dex.Config.GenderForms.String() }</span>
		</div>
		<div class="flex flex-col items-center">
			<span class="font-bold text-center">Regional Forms</span>
			<span>{ dex.Config.RegionalForms.String() }</span>
		</div>
		<div class="flex flex-col items-center">
			<span class="font-bold text-center">Gigantamax Forms</span>
			<span>{ dex.Config.GMaxForms.String() }</span>
		</div>
	</div>
}
